trigger: none   # Run manually

pool:
  name: Default

variables:
- group: terraform-secrets

stages:
- stage: Prod
  displayName: "Deploy Prod Infrastructure"
  jobs:
  - deployment: Apply_Prod
    displayName: "Terraform Apply (Prod)"
    environment: Prod-Deploy   # <-- Require approval before apply
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          # Terraform Init
          - script: terraform init -backend-config="resource_group_name=rg-terraform-state" -backend-config="storage_account_name=tfstatestorage12321" -backend-config="container_name=tfstate" -backend-config="key=prod.terraform.tfstate" -backend-config="access_key=$(ARM-STORAGE-KEY)"
            workingDirectory: $(Build.SourcesDirectory)
            displayName: "Terraform Init (Prod)"
            env:
              ARM_CLIENT_ID: $(ARM-CLIENT-ID)
              ARM_CLIENT_SECRET: $(ARM-CLIENT-SECRET)
              ARM_SUBSCRIPTION_ID: $(ARM-SUBSCRIPTION-ID)
              ARM_TENANT_ID: $(ARM-TENANT-ID)

          # Terraform Plan
          - script: terraform plan -var-file="env/prod.tfvars" -out=tfplan
            workingDirectory: $(Build.SourcesDirectory)
            displayName: "Terraform Plan (Prod)"
            env:
              ARM_CLIENT_ID: $(ARM-CLIENT-ID)
              ARM_CLIENT_SECRET: $(ARM-CLIENT-SECRET)
              ARM_SUBSCRIPTION_ID: $(ARM-SUBSCRIPTION-ID)
              ARM_TENANT_ID: $(ARM-TENANT-ID)

          # Terraform Apply
          - script: terraform apply -auto-approve tfplan
            workingDirectory: $(Build.SourcesDirectory)
            displayName: "Terraform Apply (Prod)"
            env:
              ARM_CLIENT_ID: $(ARM-CLIENT-ID)
              ARM_CLIENT_SECRET: $(ARM-CLIENT-SECRET)
              ARM_SUBSCRIPTION_ID: $(ARM-SUBSCRIPTION-ID)
              ARM_TENANT_ID: $(ARM-TENANT-ID)
