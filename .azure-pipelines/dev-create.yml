stages:
- stage: Terraform
  jobs:
  - job: ProvisionInfra
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Bash@3
      displayName: "Install Terraform"
      inputs:
        targetType: 'inline'
        script: |
          sudo apt-get update -y
          sudo apt-get install -y wget unzip
          wget https://releases.hashicorp.com/terraform/1.7.0/terraform_1.7.0_linux_amd64.zip
          unzip terraform_1.7.0_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform version

    - script: |
        terraform init
        terraform plan -out=tfplan
        terraform apply -auto-approve
      displayName: "Run Terraform"

    - script: |
        terraform output -json > tf_output.json
      displayName: "Export Terraform Outputs"

    - publish: $(System.DefaultWorkingDirectory)/tf_output.json
      artifact: tfoutput

- stage: Ansible
  dependsOn: Terraform
  jobs:
  - job: ConfigureVMs
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - download: current
      artifact: tfoutput

    - script: |
        sudo apt-get update -y
        sudo apt-get install -y python3-pip jq sshpass
        pip3 install ansible

        # Create Ansible inventory dynamically
        cat tf_output.json | jq -r '.vm_public_ip.value' > ansible/inventory

        # Run Ansible playbook
        ansible-playbook -i ansible/inventory ansible/playbook.yml \
          --user azureuser \
          --private-key ~/.ssh/id_rsa
      displayName: "Run Ansible Playbook"
